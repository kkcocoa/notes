/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        if (root == nullptr) return {};
        stack<TreeNode*> stk;
        vector<int> res;
        // 初始化
        TreeNode* cur = root;
        while (cur != nullptr)
        {
            stk.push(cur);
            cur = cur->left;
        }
        // 处理右边的结点
        while (!stk.empty())
        {
            cur = stk.top();
            stk.pop();
            res.push_back(cur->val);
            if (cur->right != nullptr)
            {
                cur = cur->right;
                while (cur)
                {
                    stk.push(cur);
                    cur = cur->left;
                }
            }
        }
        return res;
    }
};
